{"ast":null,"code":"var _jsxFileName = \"C:\\\\source\\\\EmailMarketing\\\\EmailMarketing\\\\email_tool\\\\frontend\\\\src\\\\pages\\\\Testing.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../components/Modal';\nimport FormField from '../components/FormField';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testing = () => {\n  _s();\n  var _campaigns$find2;\n  const [testResults, setTestResults] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [runningTests, setRunningTests] = useState(false);\n  const [selectedCampaign, setSelectedCampaign] = useState('');\n  const [showTestForm, setShowTestForm] = useState(false);\n  const [selectedResult, setSelectedResult] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      setTimeout(() => {\n        setCampaigns([{\n          id: 1,\n          name: 'Summer Sale 2024'\n        }, {\n          id: 2,\n          name: 'Product Launch'\n        }, {\n          id: 3,\n          name: 'Newsletter Q1'\n        }]);\n        setTestResults([{\n          id: 1,\n          campaign_id: 1,\n          language: 'en',\n          passed: true,\n          issues: [],\n          tested_at: '2024-01-15T10:30:00Z',\n          generated_email_id: 1\n        }, {\n          id: 2,\n          campaign_id: 1,\n          language: 'es',\n          passed: false,\n          issues: ['Missing placeholder: {{cta_text}}', 'Broken link: https://example.com/sale'],\n          tested_at: '2024-01-15T10:35:00Z',\n          generated_email_id: 2\n        }, {\n          id: 3,\n          campaign_id: 2,\n          language: 'en',\n          passed: true,\n          issues: [],\n          tested_at: '2024-01-14T15:20:00Z',\n          generated_email_id: 3\n        }]);\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  const runTests = async e => {\n    e.preventDefault();\n    if (!selectedCampaign) return;\n    setRunningTests(true);\n    try {\n      const response = await fetch(`/test/${selectedCampaign}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        // In a real app, you'd fetch the updated test results\n        // For now, we'll simulate new results\n        const newResults = [{\n          id: Date.now(),\n          campaign_id: parseInt(selectedCampaign),\n          language: 'en',\n          passed: Math.random() > 0.3,\n          issues: Math.random() > 0.3 ? [] : ['Sample issue for testing'],\n          tested_at: new Date().toISOString(),\n          generated_email_id: Date.now()\n        }];\n        setTestResults(prev => [...newResults, ...prev]);\n        setSelectedCampaign('');\n        setShowTestForm(false);\n      } else {\n        throw new Error('Failed to run tests');\n      }\n    } catch (error) {\n      alert('Failed to run tests. Please try again.');\n    } finally {\n      setRunningTests(false);\n    }\n  };\n  const getStatusIcon = passed => {\n    if (passed) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5 text-green-600\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M5 13l4 4L19 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5 text-red-600\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const getLanguageName = code => {\n    const languageNames = {\n      en: 'English',\n      es: 'Spanish',\n      fr: 'French',\n      de: 'German',\n      it: 'Italian',\n      pt: 'Portuguese',\n      ja: 'Japanese',\n      ko: 'Korean',\n      zh: 'Chinese'\n    };\n    return languageNames[code] || code;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Run Playwright tests to validate your email templates.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowTestForm(true),\n        className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-4 h-4 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), \"Run Tests\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Run Tests\",\n      isOpen: showTestForm,\n      onClose: () => setShowTestForm(false),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: runTests,\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Campaign\",\n          type: \"select\",\n          value: selectedCampaign,\n          onChange: e => setSelectedCampaign(e.target.value),\n          options: campaigns.map(c => ({\n            value: c.id.toString(),\n            label: c.name\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mb-4\",\n          children: \"This will run Playwright tests to validate placeholder substitution, URLs, and email rendering.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowTestForm(false),\n            className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: runningTests,\n            className: \"px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-transparent rounded-md hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 disabled:opacity-50\",\n            children: runningTests ? 'Running...' : 'Run Tests'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow overflow-hidden sm:rounded-md\",\n      children: testResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"mx-auto h-12 w-12 text-gray-400\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-2 text-sm font-medium text-gray-900\",\n          children: \"No test results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Run tests to validate your email templates.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"divide-y divide-gray-200\",\n        children: testResults.map(result => {\n          var _campaigns$find;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-4 sm:px-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [getStatusIcon(result.passed), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-sm font-medium text-gray-900\",\n                        children: ((_campaigns$find = campaigns.find(c => c.id === result.campaign_id)) === null || _campaigns$find === void 0 ? void 0 : _campaigns$find.name) || 'Unknown Campaign'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-sm text-gray-500\",\n                        children: \"\\u2022\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-sm text-gray-500\",\n                        children: getLanguageName(result.language)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${result.passed ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n                        children: result.passed ? 'Passed' : 'Failed'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [\"Tested \", new Date(result.tested_at).toLocaleString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this), result.issues.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-red-600 mt-1\",\n                      children: [result.issues.length, \" issue\", result.issues.length !== 1 ? 's' : '', \" found\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setSelectedResult(result),\n                    className: \"text-sm text-blue-600 hover:text-blue-800 font-medium\",\n                    children: \"View Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, result.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Test Results: ${selectedResult ? (_campaigns$find2 = campaigns.find(c => c.id === selectedResult.campaign_id)) === null || _campaigns$find2 === void 0 ? void 0 : _campaigns$find2.name : ''}`,\n      isOpen: !!selectedResult,\n      onClose: () => setSelectedResult(null),\n      children: selectedResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [getStatusIcon(selectedResult.passed), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${selectedResult.passed ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n              children: selectedResult.passed ? 'Passed' : 'Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500 ml-2\",\n              children: getLanguageName(selectedResult.language)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: \"Test Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Campaign ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 20\n              }, this), \" \", selectedResult.campaign_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Language:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 20\n              }, this), \" \", selectedResult.language]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tested At:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 20\n              }, this), \" \", new Date(selectedResult.tested_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Generated Email ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 20\n              }, this), \" \", selectedResult.generated_email_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), selectedResult.issues.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-red-700 mb-2\",\n            children: \"Issues Found:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc list-inside text-sm text-red-600 space-y-1\",\n            children: selectedResult.issues.map((issue, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: issue\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), selectedResult.passed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-green-600\",\n          children: \"\\u2713 All tests passed successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Testing, \"zFvTnlRE3ALfnwYgR+pqsAGwByI=\");\n_c = Testing;\nexport default Testing;\nvar _c;\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"names":["React","useState","useEffect","Modal","FormField","LoadingSpinner","jsxDEV","_jsxDEV","Testing","_s","_campaigns$find2","testResults","setTestResults","campaigns","setCampaigns","loading","setLoading","runningTests","setRunningTests","selectedCampaign","setSelectedCampaign","showTestForm","setShowTestForm","selectedResult","setSelectedResult","fetchData","setTimeout","id","name","campaign_id","language","passed","issues","tested_at","generated_email_id","error","runTests","e","preventDefault","response","fetch","method","ok","result","json","newResults","Date","now","parseInt","Math","random","toISOString","prev","Error","alert","getStatusIcon","className","children","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","getLanguageName","code","languageNames","en","es","fr","de","it","pt","ja","ko","zh","onClick","title","isOpen","onClose","onSubmit","label","type","value","onChange","target","options","map","c","toString","required","disabled","length","_campaigns$find","find","toLocaleString","issue","index","_c","$RefreshReg$"],"sources":["C:/source/EmailMarketing/EmailMarketing/email_tool/frontend/src/pages/Testing.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from '../components/Modal';\r\nimport FormField from '../components/FormField';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\ninterface TestResult {\r\n  id: number;\r\n  campaign_id: number;\r\n  language: string;\r\n  passed: boolean;\r\n  issues: string[];\r\n  tested_at: string;\r\n  generated_email_id: number;\r\n}\r\n\r\ninterface Campaign {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst Testing: React.FC = () => {\r\n  const [testResults, setTestResults] = useState<TestResult[]>([]);\r\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [runningTests, setRunningTests] = useState(false);\r\n  const [selectedCampaign, setSelectedCampaign] = useState('');\r\n  const [showTestForm, setShowTestForm] = useState(false);\r\n  const [selectedResult, setSelectedResult] = useState<TestResult | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setTimeout(() => {\r\n        setCampaigns([\r\n          { id: 1, name: 'Summer Sale 2024' },\r\n          { id: 2, name: 'Product Launch' },\r\n          { id: 3, name: 'Newsletter Q1' },\r\n        ]);\r\n        setTestResults([\r\n          {\r\n            id: 1,\r\n            campaign_id: 1,\r\n            language: 'en',\r\n            passed: true,\r\n            issues: [],\r\n            tested_at: '2024-01-15T10:30:00Z',\r\n            generated_email_id: 1,\r\n          },\r\n          {\r\n            id: 2,\r\n            campaign_id: 1,\r\n            language: 'es',\r\n            passed: false,\r\n            issues: ['Missing placeholder: {{cta_text}}', 'Broken link: https://example.com/sale'],\r\n            tested_at: '2024-01-15T10:35:00Z',\r\n            generated_email_id: 2,\r\n          },\r\n          {\r\n            id: 3,\r\n            campaign_id: 2,\r\n            language: 'en',\r\n            passed: true,\r\n            issues: [],\r\n            tested_at: '2024-01-14T15:20:00Z',\r\n            generated_email_id: 3,\r\n          },\r\n        ]);\r\n        setLoading(false);\r\n      }, 1000);\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const runTests = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedCampaign) return;\r\n\r\n    setRunningTests(true);\r\n    try {\r\n      const response = await fetch(`/test/${selectedCampaign}`, {\r\n        method: 'POST',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        // In a real app, you'd fetch the updated test results\r\n        // For now, we'll simulate new results\r\n        const newResults: TestResult[] = [\r\n          {\r\n            id: Date.now(),\r\n            campaign_id: parseInt(selectedCampaign),\r\n            language: 'en',\r\n            passed: Math.random() > 0.3,\r\n            issues: Math.random() > 0.3 ? [] : ['Sample issue for testing'],\r\n            tested_at: new Date().toISOString(),\r\n            generated_email_id: Date.now(),\r\n          },\r\n        ];\r\n        setTestResults(prev => [...newResults, ...prev]);\r\n        setSelectedCampaign('');\r\n        setShowTestForm(false);\r\n      } else {\r\n        throw new Error('Failed to run tests');\r\n      }\r\n    } catch (error) {\r\n      alert('Failed to run tests. Please try again.');\r\n    } finally {\r\n      setRunningTests(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (passed: boolean) => {\r\n    if (passed) {\r\n      return (\r\n        <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\r\n          <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n          </svg>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center\">\r\n          <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getLanguageName = (code: string) => {\r\n    const languageNames: { [key: string]: string } = {\r\n      en: 'English', es: 'Spanish', fr: 'French', de: 'German',\r\n      it: 'Italian', pt: 'Portuguese', ja: 'Japanese', ko: 'Korean', zh: 'Chinese'\r\n    };\r\n    return languageNames[code] || code;\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Testing</h1>\r\n          <p className=\"mt-1 text-sm text-gray-500\">Run Playwright tests to validate your email templates.</p>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowTestForm(true)}\r\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500\"\r\n        >\r\n          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          Run Tests\r\n        </button>\r\n      </div>\r\n\r\n      <Modal title=\"Run Tests\" isOpen={showTestForm} onClose={() => setShowTestForm(false)}>\r\n        <form onSubmit={runTests}>\r\n          <FormField\r\n            label=\"Campaign\"\r\n            type=\"select\"\r\n            value={selectedCampaign}\r\n            onChange={(e) => setSelectedCampaign(e.target.value)}\r\n            options={campaigns.map(c => ({ value: c.id.toString(), label: c.name }))}\r\n            required\r\n          />\r\n          <p className=\"text-sm text-gray-500 mb-4\">\r\n            This will run Playwright tests to validate placeholder substitution, URLs, and email rendering.\r\n          </p>\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowTestForm(false)}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={runningTests}\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 border border-transparent rounded-md hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 disabled:opacity-50\"\r\n            >\r\n              {runningTests ? 'Running...' : 'Run Tests'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\r\n        {testResults.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No test results</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500\">Run tests to validate your email templates.</p>\r\n          </div>\r\n        ) : (\r\n          <ul className=\"divide-y divide-gray-200\">\r\n            {testResults.map((result) => (\r\n              <li key={result.id}>\r\n                <div className=\"px-4 py-4 sm:px-6\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center\">\r\n                      {getStatusIcon(result.passed)}\r\n                      <div className=\"ml-4\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <span className=\"text-sm font-medium text-gray-900\">\r\n                            {campaigns.find(c => c.id === result.campaign_id)?.name || 'Unknown Campaign'}\r\n                          </span>\r\n                          <span className=\"text-sm text-gray-500\">•</span>\r\n                          <span className=\"text-sm text-gray-500\">{getLanguageName(result.language)}</span>\r\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                            result.passed \r\n                              ? 'bg-green-100 text-green-800' \r\n                              : 'bg-red-100 text-red-800'\r\n                          }`}>\r\n                            {result.passed ? 'Passed' : 'Failed'}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          Tested {new Date(result.tested_at).toLocaleString()}\r\n                        </div>\r\n                        {result.issues.length > 0 && (\r\n                          <div className=\"text-sm text-red-600 mt-1\">\r\n                            {result.issues.length} issue{result.issues.length !== 1 ? 's' : ''} found\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <button\r\n                        onClick={() => setSelectedResult(result)}\r\n                        className=\"text-sm text-blue-600 hover:text-blue-800 font-medium\"\r\n                      >\r\n                        View Details\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <Modal \r\n        title={`Test Results: ${selectedResult ? campaigns.find(c => c.id === selectedResult.campaign_id)?.name : ''}`} \r\n        isOpen={!!selectedResult} \r\n        onClose={() => setSelectedResult(null)}\r\n      >\r\n        {selectedResult && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              {getStatusIcon(selectedResult.passed)}\r\n              <div>\r\n                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                  selectedResult.passed \r\n                    ? 'bg-green-100 text-green-800' \r\n                    : 'bg-red-100 text-red-800'\r\n                }`}>\r\n                  {selectedResult.passed ? 'Passed' : 'Failed'}\r\n                </span>\r\n                <span className=\"text-sm text-gray-500 ml-2\">\r\n                  {getLanguageName(selectedResult.language)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Test Details:</h4>\r\n              <div className=\"text-sm text-gray-600\">\r\n                <p><strong>Campaign ID:</strong> {selectedResult.campaign_id}</p>\r\n                <p><strong>Language:</strong> {selectedResult.language}</p>\r\n                <p><strong>Tested At:</strong> {new Date(selectedResult.tested_at).toLocaleString()}</p>\r\n                <p><strong>Generated Email ID:</strong> {selectedResult.generated_email_id}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {selectedResult.issues.length > 0 && (\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-red-700 mb-2\">Issues Found:</h4>\r\n                <ul className=\"list-disc list-inside text-sm text-red-600 space-y-1\">\r\n                  {selectedResult.issues.map((issue, index) => (\r\n                    <li key={index}>{issue}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {selectedResult.passed && (\r\n              <div className=\"text-sm text-green-600\">\r\n                ✓ All tests passed successfully!\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testing; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}